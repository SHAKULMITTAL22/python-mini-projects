"""
Test generated by RoostGPT for test python-test using AI Type Open Source AI and AI Model mistralai/Mixtral-8x7B-Instruct-v0.1



Scenario 1:
- Input: 2000
- Expected Output: True
- Reasoning: 2000 is a leap year

Scenario 2:
- Input: 1900
- Expected Output: False
- Reasoning: 1900 is not a leap year

Scenario 3:
- Input: 2012
- Expected Output: True
- Reasoning: 2012 is a leap year

Scenario 4:
- Input: 2100
- Expected Output: False
- Reasoning: 2100 is not a leap year

Scenario 5:
- Input: 1800
- Expected Output: False
- Reasoning: 1800 is not a leap year

Scenario 6:
- Input: 1904
- Expected Output: True
- Reasoning: 1904 is a leap year

Scenario 7:
- Input: 2004
- Expected Output: True
- Reasoning: 2004 is a leap year

Scenario 8:
- Input: 1804
- Expected Output: True
- Reasoning: 1804 is a leap year

Scenario 9:
- Input: 1700
- Expected Output: False
- Reasoning: 1700 is not a leap year

Scenario 10:
- Input: 1600
- Expected Output: True
- Reasoning: 1600 is a leap year
"""
import calculate
import pytest
from calendar import isleap


def test_judge_leap_year_2000():
    assert calculate.judge_leap_year(2000) == True

def test_judge_leap_year_1900():
    assert calculate.judge_leap_year(1900) == False

def test_judge_leap_year_2012():
    assert calculate.judge_leap_year(2012) == True

def test_judge_leap_year_2100():
    assert calculate.judge_leap_year(2100) == False

def test_judge_leap_year_1800():
    assert calculate.judge_leap_year(1800) == False

def test_judge_leap_year_1904():
    assert calculate.judge_leap_year(1904) == True

def test_judge_leap_year_2004():
    assert calculate.judge_leap_year(2004) == True

def test_judge_leap_year_1804():
    assert calculate.judge_leap_year(1804) == True

def test_judge_leap_year_1700():
    assert calculate.judge_leap_year(1700) == False

def test_judge_leap_year_1600():
    assert calculate.judge_leap_year(1600) == True

